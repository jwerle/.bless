export declare BLESS_BIN_NAME="dotbless"

set -e


##
# Utils
##
require "bless/utils"


##
# Completion
##
require "completion"

##
# Flag
##
require "flags"


##
# Bless command usage
##
function BlessUsage () {
	local name="dotbless"
	declare -a local commands=( $(BlessListCommands) )
	declare -a local flags=( $(dotbless flags) )
	Usage $name commands[@] flags[@]
}


##
# Lists all Bless commands
##
function BlessListCommands () {
	CompletionList all
}


##
# Bless command invocation
##
function BlessCommand () {
	local RET lib args commands excluded
	declare local command=$1
	declare -a local parts=( $(commandFromPath "$command") )
	declare local tail="${parts[ $(expr ${#parts[@]} - 1) ]}"
	
	if ! [[ -z "$BLESS_ARGS" ]]; then
		if [ ${BLESS_ARGS[0]:0:1} != "-" ] &&
			 [ ${BLESS_ARGS[0]:0:1} != "<" ] &&
			 [ ${BLESS_ARGS[0]:0:1} != ">" ]; 
			then unset ${BLESS_ARGS[0]};
		fi
	fi

	#echo "c" $command
	declare -a args=(${BLESS_ARGS[@]})
	require "$command"
	RET=$?

	if [[ $RET ]]; then
		if [ "${args[1]}" = "--completions" ]; then
			# Grab the all of the commands
			declare -a commands=( `ls $BLESS_DIR/lib/$command` );

			# Libs excluded from completion
			declare -a excluded=( "completion" "init" );

			# loop and remove commands that appear in the excluded array
			for lib in ${excluded[@]}; do
				declare -a commands=( ${commands[@]/$lib/} );
			done

			if [[ $(type -t "${tail}Completions") = "function" ]]; then
				commands+=($(${tail}Completions))
			fi

			## output completions
			echo ${commands[@]};
			exit 0;
		fi

		
		#echo $tail
		if hasFlag "--usage"  && [ "$tail" = "$command" ]; then
			tail=$(lastCommand args[@])
			
			if [ "$tail" != "$command" ]; then
				require "${command}/${tail}"
			fi

			if [[ $(type -t "${tail}Usage") = "function" ]]; then
				## call it!
				${tail}Usage;
				## exit afer we display it
				exit 0
			fi
		elif [[ $(type -t "${tail}Init") = "function" ]]; then
			## call it!
			${tail}Init;
		fi
	fi
}